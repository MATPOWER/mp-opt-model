name: CI

# controls when action will run
on:
  # triggers workflow on push events
  push:
  # allows workflow to be triggered manually from Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
#        os: [macos-10.15, macos-11.0, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]
        os: [macos-latest, ubuntu-16.04, ubuntu-18.04, ubuntu-20.04]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Install Octave (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      uses: MATPOWER/action-install-octave-linux@v1
      with:
        ipopt-libs: true

    - name: Install Octave (macOS)
      if: startsWith(matrix.os, 'macos')
      uses: MATPOWER/action-install-octave-macos@v1

    - name: ${{ env.ML_NAME }} ${{ env.ML_VER }} Installed
      run: $ML_CMD ver

    - name: Include IPOPT?
      if: startsWith(env.OCTAVE_VER, '4.0') != 1
      run: echo "INCLUDE_IPOPT=1" >> $GITHUB_ENV

    - name: Cache IPOPT Libs (macOS)
      if: env.INCLUDE_IPOPT && startsWith(matrix.os, 'macos')
      id: cache-ipopt-libs
      env:
        cache-name: ipopt-libs
      uses: actions/cache@v2
      with:
        path: ~/install
        key: ${{ matrix.os }}-${{ env.cache-name }}

    - name: Build IPOPT (macOS)
      if: env.INCLUDE_IPOPT && startsWith(matrix.os, 'macos') && steps.cache-ipopt-libs.outputs.cache-hit != 'true'
      uses: MATPOWER/action-build-ipopt-macos@v1

    - name: Cache IPOPT interface for Octave
      if: env.INCLUDE_IPOPT
      id: cache-ipopt
      env:
        cache-name: ipopt
      uses: actions/cache@v2
      with:
        path: ~/build/ipopt
        key: ${{ matrix.os }}-${{ env.cache-name }}

    - name: Install IPOPT interface for Octave
      if: env.INCLUDE_IPOPT
      uses: MATPOWER/action-install-ipopt-octave@v1
      with:
        cached: ${{ steps.cache-ipopt.outputs.cache-hit == 'true' }}

    - name: Include OSQP?
      if: startsWith(env.OCTAVE_VER, '4') != 1
      run: echo "INCLUDE_OSQP=1" >> $GITHUB_ENV

    - name: Cache OSQP interface for Octave
      if: env.INCLUDE_OSQP
      id: cache-osqp
      env:
        cache-name: osqp
      uses: actions/cache@v2
      with:
        path: ~/build/osqp-matlab
        key: ${{ matrix.os }}-${{ env.cache-name }}

    - name: Install OSQP interface for Octave
      if: env.INCLUDE_OSQP
      uses: MATPOWER/action-install-osqp-octave@v1
      with:
        cached: ${{ steps.cache-osqp.outputs.cache-hit == 'true' }}

    - name: Install MP-Test, Set MPTEST_PATH
      run: |
        git clone --depth=1 https://github.com/MATPOWER/mptest.git $HOME/mptest
        echo "MPTEST_PATH=$HOME/mptest/lib:$HOME/mptest/lib/t" >> $GITHUB_ENV

    - name: Install MIPS, Set MIPS_PATH
      run: |
        git clone --depth=1 https://github.com/MATPOWER/mips.git $HOME/mips
        echo "MIPS_PATH=$HOME/mips/lib:$HOME/mips/lib/t:${MPTEST_PATH}" >> $GITHUB_ENV

    - name: Set MP_OPT_MODEL_PATH
      run: echo "MP_OPT_MODEL_PATH=${GITHUB_WORKSPACE}/lib:${GITHUB_WORKSPACE}/lib/t:${MIPS_PATH}" >> $GITHUB_ENV

    - name: Print MP-Test/MIPS/MP-Opt-Model version numbers
      run: |
        env $ML_PATHVAR=$MPTEST_PATH $ML_CMD mptestver
        env $ML_PATHVAR=$MIPS_PATH $ML_CMD mipsver
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD mpomver

    - name: Test GLPK availability, print version number
      run:  |
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "if ~have_feature('glpk'), exit(1); end"
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "qps_glpk( [],[1; 1],[1 1],[2],[2],[1; 1],[1; 1],[1; 1],struct('verbose', 3));"

    - name: Test IPOPT availability, print version number
      if: env.INCLUDE_IPOPT
      run:  |
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "if ~have_feature('ipopt'), exit(1); end"
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "qps_ipopt([],[1; 1],[1 1],[2],[2],[1; 1],[1; 1],[1; 1],struct('verbose', 2));"

    - name: Test OSQP availability, print version number
      if: env.INCLUDE_OSQP
      run:  |
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "if ~have_feature('osqp'), exit(1); end"
        env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD osqpver

    - name: Test MP-Test
      run: env $ML_PATHVAR=$MPTEST_PATH $ML_CMD "test_mptest(0,1)"

    - name: Test MIPS
      run: env $ML_PATHVAR=$MIPS_PATH $ML_CMD "test_mips(0,1)"

    - name: Test MP-Opt-Model
      run: env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "test_mp_opt_model(0,1)"

#     - name: Test MP-Opt-Model-OSQP
#       run: env $ML_PATHVAR=$MP_OPT_MODEL_PATH $ML_CMD "t_om_solve_qps"

#     - name: Create MEX file downloads
#       uses: actions/upload-artifact@v2
#       with:
#         name: ${{ matrix.os }}-octave-${{ env.OCTAVE_VER }}-mex-files
#         path: |
#           ~/build/ipopt
#           ~/build/osqp-matlab
